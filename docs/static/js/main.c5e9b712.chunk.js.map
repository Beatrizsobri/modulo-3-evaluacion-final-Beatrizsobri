{"version":3,"sources":["images/RickandMortylogo.png","components/Filters.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/Header.js","components/CharacterDetail.js","components/App.js","services/Api.js","index.js"],"names":["module","exports","Filters","props","className","onSubmit","ev","preventDefault","action","htmlFor","name","id","onChange","handleSearch","value","target","type","placeholder","onClick","resetSearch","CharacterCard","this","characterData","image","species","Fragment","src","alt","to","Component","CharacterList","isExistingCharacter","charactersData","length","text","map","key","Home","Header","logo","CharacterDetail","character","status","origin","episode","isDead","icon","faDizzy","faArrowCircleLeft","App","state","search","characters","bind","renderCharacterDetail","data","setState","filter","toLowerCase","includes","routeId","parseInt","match","params","find","item","undefined","fetch","then","response","json","results","console","log","filterCharacters","exact","path","render","ReactDOM","document","getElementById"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,8C,4SC8B5BC,G,MA1BC,SAAAC,GASZ,OACI,0BAAMC,UAAU,OAAOC,SAHJ,SAAAC,GAAE,OAAIA,EAAGC,kBAGqBC,OAAO,QACpD,2BAAOJ,UAAU,cAAcK,QAAQ,UAAvC,uBACA,yBAAKL,UAAU,mBACX,2BAAOA,UAAU,cAAcM,KAAK,SAASC,GAAG,SAASC,SAZhD,SAAAN,GACjBA,EAAGC,iBACHJ,EAAMU,aAAa,CACfC,MAAOR,EAAGS,OAAOD,SASoEE,KAAK,OAAOC,YAAY,2BAAwBH,MAAOX,EAAMW,QAC9I,4BAAQV,UAAU,eAAec,QAASf,EAAMgB,aAAhD,0B,OCYDC,G,uLAvBD,IAAD,EACgCC,KAAKlB,MAAMmB,cAAxCX,EADH,EACGA,GAAIY,EADP,EACOA,MAAOb,EADd,EACcA,KAAMc,EADpB,EACoBA,QACzB,OACI,kBAAC,IAAMC,SAAP,KACI,6BACI,yBAAKrB,UAAU,oBAAoBsB,IAAKH,EAAOI,IAAG,oBAAejB,MAErE,yBAAKN,UAAU,oBACX,kBAAC,IAAD,CAAMwB,GAAE,qBAAgBjB,IACpB,wBAAIP,UAAU,eAAeM,IAEjC,uBAAGN,UAAU,cAAcoB,S,GAZnBK,c,yBCsBbC,EArBO,SAAA3B,GAClB,IAAM4B,EAAsD,IAAhC5B,EAAM6B,eAAeC,OAAe,wBAAI7B,UAAU,SAAd,aAA6B,kBAAC,IAAD,CAAO8B,KAAK,gBAAzC,gFAAuI,GAC/LF,EAAmB7B,EAAnB6B,eACR,OACI,0BAAO5B,UAAU,IACZ2B,EACD,wBAAI3B,UAAU,QACT4B,EAAeG,KAAI,SAAAb,GAAa,OAC7B,wBAAIlB,UAAU,aAAagC,IAAKd,EAAcX,IAC1C,kBAAC,EAAD,CAAeW,cAAeA,WCQvCe,EAlBF,SAAAlC,GAAU,IACXU,EAAwCV,EAAxCU,aAAcmB,EAA0B7B,EAA1B6B,eAAgBlB,EAAUX,EAAVW,MACtC,OACI,kBAAC,WAAD,KACI,kBAAC,EAAD,CAASD,aAAcA,EAAcC,MAAOA,EAAOK,YAAahB,EAAMgB,cACtE,kBAAC,EAAD,CAAea,eAAgBA,M,iBCG5BM,G,uLARP,OACI,4BAAQlC,UAAU,UACd,yBAAKA,UAAU,eAAesB,IAAKa,IAAMZ,IAAI,6B,GAJxCE,c,gBCuCNW,G,MApCS,SAAArC,GAAU,IAAD,EAC6BA,EAAMsC,UAAxDlB,EADqB,EACrBA,MAAOb,EADc,EACdA,KAAMgC,EADQ,EACRA,OAAQlB,EADA,EACAA,QAASmB,EADT,EACSA,OAAQC,EADjB,EACiBA,QACxCC,EAAoB,SAAXH,EAAoB,kBAAE,IAAF,CAAkBI,KAAMC,MAAc,qBACzE,OACI,0BAAM3C,UAAU,QACZ,yBAAKA,UAAU,gBACX,kBAAC,IAAD,CAAMwB,GAAG,KACL,4BAAQxB,UAAU,UACd,kBAAC,IAAD,CAAiB0C,KAAME,MAD3B,YAMR,yBAAK5C,UAAU,qBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,8BAA8BsB,IAAKH,EAAOI,IAAG,+BAA0BjB,MAE1F,yBAAKN,UAAU,qBACX,wBAAIA,UAAU,eAAeM,GAC7B,wBAAIN,UAAU,cACV,wBAAIA,UAAU,aAAd,UAAkCyC,GAClC,wBAAIzC,UAAU,aAAd,YAAoCoB,GACpC,wBAAIpB,UAAU,aAAd,WAAmCuC,EAAOjC,MAC1C,wBAAIN,UAAU,aAAd,aAAqCwC,EAAQX,OAA7C,WC2CTgB,E,YAhEb,WAAY9C,GAAQ,IAAD,8BACjB,4CAAMA,KACD+C,MAAQ,CACXC,OAAQ,GACRC,WAAY,IAEd,EAAKvC,aAAe,EAAKA,aAAawC,KAAlB,gBACpB,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKlC,YAAc,EAAKA,YAAYkC,KAAjB,gBARF,E,0EAWNE,GACXlC,KAAKmC,SAAS,CACZL,OAAQI,EAAKzC,U,yCAGG,IAAD,OACjB,OAAOO,KAAK6B,MAAME,WACfK,QAAO,SAAAhB,GAAS,OAAIA,EAAU/B,KAAKgD,cAAcC,SAAS,EAAKT,MAAMC,OAAOO,oB,oCAI/ErC,KAAKmC,SAAS,CACZL,OAAQ,O,4CAIUhD,GACpB,IAAMyD,EAAUC,SAAS1D,EAAM2D,MAAMC,OAAOpD,IACtC8B,EAAYpB,KAAK6B,MAAME,WAAWY,MAAK,SAAAC,GAAI,OAAIA,EAAKtD,KAAOiD,KACjE,YAAkBM,IAAdzB,EACK,qFAEA,kBAAC,EAAD,CAAiBA,UAAWA,M,0CAIlB,IAAD,OC5CQ0B,MAFT,uFAE6BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UD6CtDF,MAAK,SAAAb,GAAI,OAAI,EAAKC,SAAS,CAC3CJ,WAAYG,EAAKgB,e,+BAMnB,OADAC,QAAQC,IAAIpD,KAAKqD,oBAEf,yBAAKtE,UAAU,iBACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,CACE/D,aAAcQ,KAAKR,aACnBmB,eAAgBX,KAAKqD,mBACrB5D,MAAOO,KAAK6B,MAAMC,OAClBhC,YAAaE,KAAKF,eAGtB,kBAAC,IAAD,CAAOyD,KAAK,iBAAiBC,OAAQxD,KAAKiC,8B,GA1DlCzB,aEHlBiD,IAASD,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJE,SAASC,eAAe,W","file":"static/js/main.c5e9b712.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RickandMortylogo.75509f2e.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filters.scss'\n\nconst Filters = props => {\n    const handleSearch = ev => {\n        ev.preventDefault();\n        props.handleSearch({\n            value: ev.target.value\n        });\n    }\n    const preventDefault = ev => ev.preventDefault();\n\n    return (\n        <form className=\"form\" onSubmit={preventDefault} action=\"POST\">\n            <label className=\"form__label\" htmlFor=\"search\">Busca un personaje:</label>\n            <div className=\"form__container\">\n                <input className=\"form__input\" name=\"search\" id=\"search\" onChange={handleSearch} type=\"text\" placeholder='Escribe aquí mozuel@!' value={props.value} />\n                <button className=\"form__button\" onClick={props.resetSearch}>Borrar búsqueda</button>\n            </div>\n        </form>\n    );\n};\n\nFilters.propTypes = {\n    value: PropTypes.string.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired\n}\n\nexport default Filters;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/characterCard.scss'\n\n\nclass CharacterCard extends Component {\n    render() {\n        const { id, image, name, species } = this.props.characterData\n        return (\n            <React.Fragment>\n                <div >\n                    <img className=\"list__card--image\" src={image} alt={`Imagen de ${name}`} />\n                </div>\n                <div className=\"list__card--body\">\n                    <Link to={`/character/${id}`}>\n                        <h2 className=\"body--title\">{name}</h2>\n                    </Link>\n                    <p className=\"body--text\">{species}</p>\n                </div>\n            </React.Fragment>\n\n        );\n    }\n}\n\nCharacterCard.propTypes = {\n    characterData: PropTypes.object.isRequired\n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/characterList.scss'\nimport Emoji from \"react-emoji-render\";\n\n\nconst CharacterList = props => {\n    const isExistingCharacter = props.charactersData.length === 0 ? <h3 className=\"alert\">¡Loco! <Emoji text=\":satisfied:\" /> El personaje que buscas no éxiste en este universo. ¡Vuelve a probar!</h3> : ''\n    const { charactersData } = props;\n    return (\n        < main className=\"\">\n            {isExistingCharacter}\n            <ul className=\"list\">\n                {charactersData.map(characterData =>\n                    <li className=\"list__card\" key={characterData.id}>\n                        <CharacterCard characterData={characterData} />\n                    </li>\n                )}\n            </ul>\n        </main >\n    )\n}\n\nCharacterList.propTypes = {\n    charactersData: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default CharacterList;\n","import React, { Fragment } from 'react';\nimport Filters from './Filters';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\n\nconst Home = props => {\n    const { handleSearch, charactersData, value } = props\n    return (\n        <Fragment >\n            <Filters handleSearch={handleSearch} value={value} resetSearch={props.resetSearch} />\n            <CharacterList charactersData={charactersData} />\n        </Fragment>\n    )\n}\n\nHome.propTypes = {\n    charactersData: PropTypes.arrayOf(PropTypes.object).isRequired,\n    value: PropTypes.string.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired\n}\n\n\nexport default Home;\n\n","import React, { Component } from 'react';\nimport logo from '../images/RickandMortylogo.png';\nimport '../stylesheets/header.scss'\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"header\">\n                <img className=\"header__hero\" src={logo} alt=\"Rick and Morty logo\" />\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faDizzy, faArrowCircleLeft } from '@fortawesome/free-solid-svg-icons';\nimport '../stylesheets/characterDetail.scss'\n\nconst CharacterDetail = props => {\n    const { image, name, status, species, origin, episode } = props.character;\n    const isDead = status === 'Dead' ? < FontAwesomeIcon icon={faDizzy} /> : ' Vivit@ y coleando'\n    return (\n        <main className=\"card\">\n            <div className=\"card__button\">\n                <Link to='/'>\n                    <button className=\"button\">\n                        <FontAwesomeIcon icon={faArrowCircleLeft} />\n                        Volver\n                    </button>\n                </Link>\n            </div>\n            <div className=\"card__description\">\n                <div className=\"description--image\">\n                    <img className=\"description--image--details\" src={image} alt={`Imagen del personaje ${name}`} />\n                </div>\n                <div className=\"description--text\">\n                    <h3 className=\"card--title\">{name}</h3>\n                    <ul className=\"card--list\">\n                        <li className=\"card-text\">Status:{isDead}</li>\n                        <li className=\"card-text\">Species: {species}</li>\n                        <li className=\"card-text\">Origin: {origin.name}</li>\n                        <li className=\"card-text\">Episodes: {episode.length} </li>\n                    </ul>\n                </div>\n            </div>\n        </main >\n\n    );\n}\n\nCharacterDetail.propTypes = {\n    character: PropTypes.object.isRequired,\n}\n\nexport default CharacterDetail;","import React, { Component } from 'react';\nimport '../stylesheets/App.scss';\nimport { fetchRickyMorty } from '../services/Api';\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './Home';\nimport Header from './Header';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      characters: [],\n    };\n    this.handleSearch = this.handleSearch.bind(this);\n    this.renderCharacterDetail = this.renderCharacterDetail.bind(this);\n    this.resetSearch = this.resetSearch.bind(this)\n  }\n\n  handleSearch(data) {\n    this.setState({\n      search: data.value\n    })\n  }\n  filterCharacters() {\n    return this.state.characters\n      .filter(character => character.name.toLowerCase().includes(this.state.search.toLowerCase()));\n  }\n\n  resetSearch() {\n    this.setState({\n      search: ''\n    })\n  }\n\n  renderCharacterDetail(props) {\n    const routeId = parseInt(props.match.params.id);\n    const character = this.state.characters.find(item => item.id === routeId);\n    if (character === undefined) {\n      return <p>Tu personaje aún no ha sido creado en este universo</p>\n    } else {\n      return <CharacterDetail character={character} />\n    }\n  }\n\n  componentDidMount() {\n    fetchRickyMorty().then(data => this.setState({\n      characters: data.results\n    }));\n  }\n\n  render() {\n    console.log(this.filterCharacters())\n    return (\n      <div className=\"app p-3 mb-10\" >\n        <Header />\n        <Switch>\n          <Route exact path='/'>\n            <Home\n              handleSearch={this.handleSearch}\n              charactersData={this.filterCharacters()}\n              value={this.state.search}\n              resetSearch={this.resetSearch}\n            />\n          </Route>\n          <Route path='/character/:id' render={this.renderCharacterDetail} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const characterApi = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json';\n\nconst fetchRickyMorty = () => fetch(characterApi).then(response => response.json());\n\nexport { fetchRickyMorty };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'));\n"],"sourceRoot":""}